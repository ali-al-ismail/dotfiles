# Variables to make it work better with Nvidia GPU
env = GBM_BACKEND,nvidia-drm
env = __GLX_VENDOR_LIBRARY_NAME,nvidia
env = LIBVA_DRIVER_NAME,nvidia
env = WLR_NO_HARDWARE_CURSORS,1
# XDG Specifications
env = XDG_CURRENT_DESKTOP,Hyprland
env = XDG_SESSION_TYPE,wayland
env = XDG_SESSION_DESKTOP,Hyprland
# Toolkit Backend Variables
env = GDK_BACKEND=wayland,x11
env = SDL_VIDEODRIVER,wayland
env = CLUTTER_BACKEND,wayland
# QT Variables
env = QT_AUTO_SCREEN_SCALE_FACTOR,1
env = QT_QPA_PLATFORM,wayland;xcb
env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1
env = QT_QPA_PLATFORMTHEME,qt5ct
# Theme
env = XCURSOR_THEME,Adwaita
env = XCURSOR_SIZE,24


# Monitors
monitor=,preferred,auto,auto


general {
    border_size = 2
    gaps_in = 5
    gaps_out = 10

    col.inactive_border = rgb(360000)
    col.active_border = rgb(800000) rgb(360000) 45deg

    col.group_border = rgb(360000)
    col.group_border_active = rgb(800000) rgb(360000) 45deg

    layout = dwindle

    extend_border_grab_area = 15
}

decoration {
    rounding = 7

    blur = false

    drop_shadow = false

    # FIX: Delete when Nvidia support GAMMA_LUT connector property.
    screen_shader = ~/.config/hypr/color_temperature_shader.glsl
}

animations {
    enabled = true

    # TODO: Improve timeing and every thing.
    bezier = myBezier, 0.05, 0.9, 0.1, 1.05

    animation = windows,     1, 7,  myBezier
    animation = windowsOut,  1, 7,  default, popin 80%
    animation = border,      1, 10, default
    animation = borderangle, 1, 8,  default
    animation = fade,        1, 7,  default
    animation = workspaces,  1, 6,  default
}

input {
    kb_layout = us,ara
    kb_options = caps:escape_shifted_capslock,grp:alt_shift_toggle
    numlock_by_default = true

    sensitivity = 1.0
    accel_profile = adaptive

    scroll_method = 2fg

    touchpad {
        # TODO: Adjust to the best.
        scroll_factor = 1.0
    }
}

gestures {
    workspace_swipe = true
}

misc {
    disable_hyprland_logo = true
    # TODO: Know what it does.
    disable_splash_rendering = false

    mouse_move_enables_dpms = true
    key_press_enables_dpms = true

    disable_autoreload = true

    # TODO: Test that.
    allow_session_lock_restore = true
}

binds {
    workspace_back_and_forth = true
}

# TODO: Improve layout settings.
dwindle {
    # TODO: Know what it does.
    pseudotile = true
    preserve_split = true
    no_gaps_when_only = false
}

# TODO: Improve layout settings.
master {
    new_is_master = false
    no_gaps_when_only = false
}

# Window Rules
windowrulev2 = float,center,class:^(app\.drey\.Dialect)$

# Keybinds
$Mod = SUPER

# --------- Hyprland related keybindings ---------

# Move focus with Mod + arrow keys
bind = $Mod, H, movefocus, l
bind = $Mod, L, movefocus, r
bind = $Mod, K, movefocus, u
bind = $Mod, J, movefocus, d

# Focus last focused window
bind = $Mod, Z, focuscurrentorlast,

# Move window
bind = $Mod + SHIFT, H, movewindow, l
bind = $Mod + SHIFT, L, movewindow, r
bind = $Mod + SHIFT, K, movewindow, u
bind = $Mod + SHIFT, J, movewindow, d

# Switch workspaces with Mod + [0-9]
bind = $Mod, 1, workspace, 1
bind = $Mod, 2, workspace, 2
bind = $Mod, 3, workspace, 3
bind = $Mod, 4, workspace, 4
bind = $Mod, 5, workspace, 5
bind = $Mod, 6, workspace, 6
bind = $Mod, 7, workspace, 7
bind = $Mod, 8, workspace, 8
bind = $Mod, 9, workspace, 9
bind = $Mod, 0, workspace, 10

# Move active window to a workspace with Mod + SHIFT + [0-9]
bind = $Mod SHIFT, 1, movetoworkspace, 1
bind = $Mod SHIFT, 2, movetoworkspace, 2
bind = $Mod SHIFT, 3, movetoworkspace, 3
bind = $Mod SHIFT, 4, movetoworkspace, 4
bind = $Mod SHIFT, 5, movetoworkspace, 5
bind = $Mod SHIFT, 6, movetoworkspace, 6
bind = $Mod SHIFT, 7, movetoworkspace, 7
bind = $Mod SHIFT, 8, movetoworkspace, 8
bind = $Mod SHIFT, 9, movetoworkspace, 9
bind = $Mod SHIFT, 0, movetoworkspace, 10

# Move workspace
bind = $Mod + ALT, H, movecurrentworkspacetomonitor, l
bind = $Mod + ALT, L, movecurrentworkspacetomonitor, r
bind = $Mod + ALT, K, movecurrentworkspacetomonitor, u
bind = $Mod + ALT, J, movecurrentworkspacetomonitor, d

# Scroll through existing workspaces with mainMod + scroll
bind = $Mod, mouse_down, workspace, e+1
bind = $Mod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $Mod, mouse:272, movewindow
bindm = $Mod, mouse:273, resizewindow

# TODO: Improve keys
# Toggle group
bind = $Mod + CTRL, G, togglegroup,
# Move between windows inside group
bind = $Mod, Left, changegroupactive, b
bind = $Mod, Right, changegroupactive, f
# Toggle group lock
bind = $Mod + CTRL, L, changegroupactive, toggle
# Move window into group
bind = $Mod + CTRL, H, moveintogroup, l
bind = $Mod + CTRL, L, moveintogroup, r
bind = $Mod + CTRL, K, moveintogroup, u
bind = $Mod + CTRL, J, moveintogroup, d
# Move window outof group
bind = $Mod + CTRL, H, moveoutofgroup,
bind = $Mod + CTRL, L, moveoutofgroup,
bind = $Mod + CTRL, K, moveoutofgroup,
bind = $Mod + CTRL, J, moveoutofgroup,

# kill focused window
bind = $Mod + SHIFT, Q, killactive,
# Reload all resources and outputs
bind = $Mod + SHIFT, R, forcerendererreload,
# Toggle floating
bind = $Mod + SHIFT , F, togglefloating,
# Toggle full screen
bind = $Mod, F, fullscreen,
# Pin window
bind = $Mod + SHIFT, P, pin,

# -------------- Other keybindings ---------------
# Start a terminal
bind = $Mod, Tab, exec, alacritty

# Open app launcher
bindr = SUPER, SUPER_L, exec, pkill rofi || rofi -modi drun,filebrowser -show drun

# Open calculator
bind = $Mod, C, exec, rofi -modi calc -show calc
# Open emoji picker
bind = $Mod, comma, exec, rofi -modi emoji -show emoji
# Open window selector ( Not supported )
# bind = $Mod, X, exec, rofi -modi window -show window
# Open firefox bookmarks launcher
bind = $Mod, B, exec, rofi -modi foxmarks:~/scripts/rofi/firefox_bookmarks.py -show foxmarks
# Open session manager
bind = $Mod, Q, exec, rofi -modi managesession:~/scripts/rofi/manage_session.sh -show managesession

# Open file manager
bind = $Mod, E, exec, thunar

# Translate selected text
bind = $Mod, G, exec, ~/scripts/translate_selection.sh

# Open the screenshot tool
# TODO: Replace `grim` with `wayshot` when https://github.com/waycrate/wayshot/pull/40 is done.
# bind = , Print, exec, wayshot --slurp "$(slurp -f '%x %y %w %h')" --stdout | swappy -f -
bind = , Print, exec, grim -g "$(slurp)" - | swappy -f -

# FIX: Use a clipboard manager.
# ClipBoard manager
# bind = $Mod, P, exec,
# bind = $Mod, O, exec,
# bind = $Mod + SHIFT, O,

# Open notification center
bind = $Mod, grave, exec, swaync-client -t -sw

# Use WirePlumber to adjust volume and mute and unmute in PipeWire.
bind = , XF86AudioRaiseVolume, exec, wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ 3%+
bind = , XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 3%-
bind = , XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
# FIX: Apply to every source and not just the default.
bind = , XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle

# Screen brightness keys
bind = , XF86MonBrightnessUp, exec, brightnessctl s 5%+
bind = , XF86MonBrightnessDown, exec, brightnessctl s 5%-

# Media players controllers
bind = , XF86AudioPlay, exec, playerctl play-pause
bind = , XF86AudioStop, exec, playerctl stop
bind = , XF86AudioPrev, exec, playerctl previous
bind = , XF86AudioNext, exec, playerctl next

# Open Qalculate!
bind = , XF86Calculator, exec, qalculate-qt

# Open Firefox
bind = , XF86Explorer, exec, firefox

# TODO: Bind most XFree86 keyboard keys
# XF86TouchpadOn
# XF86TouchpadOff

# XF86Tools
# XF86Mail
# XF86HomePage
# XF86Reload
# Cancel
# XF86Forward
# XF86Back

# -------- Autostart scripts and deamons ---------

# Make systemd/dbus aware of some wayland environment variables.
exec-once = dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP

# Start the panel
exec-once = waybar

# Start the notification center and server.
exec-once = swaync

# FIX: Use a clipboard manager.
# Start clipboard manager deamon.
# exec-once =

# NetworkManager system tray GUI
exec-once = nm-applet

# Start Geoclue Demo agent
exec-once = /usr/lib/geoclue-2.0/demos/agent

# Start gammastep and it's tray icon to protect my eyes
# FIX: When Nvidia support GAMMA_LUT connector property.
# exec-once = gammastep
# exec-once = gammastep-indicator

# FIX: Use break timer to protect my eyes.
# Breaks timer
# exec-once =

# Open gnome-keyring PAM Socket Connection
exec-once = gnome-keyring-daemon --start --components=secrets

# polkit authentication agents
exec-once = /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# Per window keyboard layout
exec-once = hyprland-per-window-layout

# Start XDG autostart .desktop files using dex (Only files in ~/.config/autostart).
# See also: https://wiki.archlinux.org/index.php/XDG_Autostart
exec-once = sleep 30; dex --autostart --environment Hyprland --search-paths ~/.config/autostart

# Manage locking and suspending
exec-once = swayidle lock "swaylock && sleep 3 && hyprctl dispatch dpms off" timeout 600 'swaylock' timeout 610 "hyprctl dispatch dpms off" timeout 7200 "systemctl suspend"
